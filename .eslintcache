[{"/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/index.js":"1","/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/App.js":"2","/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/components/Navbar.js":"3","/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Credentials/Login.js":"4","/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Games/JanKenPon.js":"5","/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Credentials/Register.js":"6","/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Games/MonsterKiller.js":"7","/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/ArtWork/UploadArtWork.js":"8","/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Home-About/About.js":"9","/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Profile/ShowProfile.js":"10","/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/NotFound/NotFound.js":"11","/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Home-About/Home.js":"12","/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/ArtWork/ShowArtWork.js":"13","/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Profile/EditProfile.js":"14","/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Games/MonsterKillerSupport.js":"15"},{"size":196,"mtime":1610718402943,"results":"16","hashOfConfig":"17"},{"size":1532,"mtime":1616065702998,"results":"18","hashOfConfig":"17"},{"size":2140,"mtime":1616065119403,"results":"19","hashOfConfig":"17"},{"size":1754,"mtime":1616334602674,"results":"20","hashOfConfig":"17"},{"size":1337,"mtime":1616138868309,"results":"21","hashOfConfig":"17"},{"size":2000,"mtime":1616337464467,"results":"22","hashOfConfig":"17"},{"size":4476,"mtime":1616227944410,"results":"23","hashOfConfig":"17"},{"size":3788,"mtime":1616341612005,"results":"24","hashOfConfig":"17"},{"size":136,"mtime":1616065616601,"results":"25","hashOfConfig":"17"},{"size":202,"mtime":1616064333212,"results":"26","hashOfConfig":"17"},{"size":504,"mtime":1616064680455,"results":"27","hashOfConfig":"17"},{"size":152,"mtime":1615819375897,"results":"28","hashOfConfig":"17"},{"size":1852,"mtime":1616322210638,"results":"29","hashOfConfig":"17"},{"size":3846,"mtime":1616338020618,"results":"30","hashOfConfig":"17"},{"size":883,"mtime":1616137898654,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"18nsdrk",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/index.js",[],["65","66"],"/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/App.js",[],"/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/components/Navbar.js",[],"/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Credentials/Login.js",[],"/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Games/JanKenPon.js",[],"/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Credentials/Register.js",[],"/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Games/MonsterKiller.js",["67"],"import React, { useState, useEffect } from 'react';\nimport { MonsterHP, PlayerHP } from './MonsterKillerSupport';\nimport './MonsterKiller.css';\n\nfunction KillMonster() {\n    // choosen value\n    let choosenMaxLife = 100;\n\n    // hard-coded value\n    const PLAYER_NORMAL_ATTACK_VALUE = 15;\n    const PLAYER_STRONG_ATTACK_VALUE = 40;\n    const MONSTER_ATTACK_VALUE = 35;\n    const PLAYER_HEAL_VALUE = 25;\n\n    const initialStyle = {\n        display: 'inline',\n        fontWeight: 'bold',\n        color: 'white',\n        background: '#ff0062',\n        border: '1px solid #ff0062',\n        padding: '0.15rem 0.5rem',\n        borderRadius: '10px',\n        textAlign: 'center',\n        margin: '0 0.5rem'\n    };\n\n    // main variables that decide gameplay\n    const [monsterHealthBar, setMonsterHealthBar] = useState(choosenMaxLife);\n    const [playerHealthBar, setPlayerHealthBar] = useState(choosenMaxLife);\n    const [extraHealthStyle, setExtraHealthStyle] = useState(initialStyle);\n    const [haveBonusLife, setHaveBonusLife] = useState(true);\n    const [gameLog, setGameLog] = useState([]);\n\n    useEffect(() => {\n        setGameLog([...gameLog, {\n            monsterHP: monsterHealthBar,\n            playerHP: playerHealthBar\n        }])\n    }, [monsterHealthBar, playerHealthBar]);\n\n    const removeBonusLife = () => {\n        setExtraHealthStyle({\n            display: 'none'\n        });\n        setHaveBonusLife(false);\n    };\n    const addBonusLife = () => {\n        setExtraHealthStyle(initialStyle);\n        setHaveBonusLife(false);\n    };\n\n    const reset = () => {\n        setMonsterHealthBar(choosenMaxLife);\n        setPlayerHealthBar(choosenMaxLife);\n        addBonusLife();\n        setGameLog([]);\n    };\n\n    const winCondition = (monsterHP, playerHP) => {\n        if (monsterHP <= 1 && playerHP > 0) {\n            alert('You won!');\n            reset();\n        } else if (monsterHP > 0 && playerHP <= 0) {\n            if (haveBonusLife) {\n                removeBonusLife();\n                setPlayerHealthBar(PLAYER_HEAL_VALUE);\n            } else {\n                alert('You lost!');\n                reset();\n            };\n        } else if (monsterHP <= 0 && playerHP <= 0) {\n            alert('You have a draw');\n            reset();\n        };\n    };\n\n    const attackHandler = () => {\n        /*attack from player*/\n        const damage2Monster = Math.random() * PLAYER_NORMAL_ATTACK_VALUE;\n        setMonsterHealthBar(Math.floor(monsterHealthBar - damage2Monster));\n\n        /*attack from monster*/\n        const damage2Player = Math.random() * MONSTER_ATTACK_VALUE;\n        setPlayerHealthBar(Math.floor(playerHealthBar - damage2Player));\n    };\n\n    const strongAttackHandler = () => {\n        /*attack from player*/\n        const damage2Monster = Math.random() * PLAYER_STRONG_ATTACK_VALUE\n        setMonsterHealthBar(Math.floor(monsterHealthBar - damage2Monster));\n\n        /*attack from monster*/\n        const damage2Player = Math.random() * MONSTER_ATTACK_VALUE;\n        setPlayerHealthBar(Math.floor(playerHealthBar - damage2Player));\n    };\n\n    const healPlayerHandler = () => {\n        if (choosenMaxLife - playerHealthBar < PLAYER_HEAL_VALUE) {\n            alert(\"You can't use extra health yet!\");\n        } else {\n            removeBonusLife();\n            const damage2Player = Math.random() * MONSTER_ATTACK_VALUE;\n            setPlayerHealthBar(Math.floor(playerHealthBar + PLAYER_HEAL_VALUE - damage2Player));\n        };\n    };\n\n    console.log({ monsterHealthBar, playerHealthBar, haveBonusLife });\n    winCondition(monsterHealthBar, playerHealthBar);\n\n    return (\n        <div className='play1'>\n            <div className='health-levels'>\n                <h2 id='health'>MONSTER HEALTH</h2>\n                <MonsterHP done={monsterHealthBar} />\n                <h2 id='health'>PLAYER HEALTH <span id=\"bonus-life\" style={extraHealthStyle}>1</span> </h2>\n                <PlayerHP percentage={playerHealthBar} />\n            </div>\n            <div className=\"controls\">\n                <button className=\"monsterkiller\" onClick={attackHandler}>ATTACK</button>\n                <button className=\"monsterkiller\" onClick={strongAttackHandler}>STRONG ATTACK</button>\n                <button className=\"monsterkiller\" onClick={healPlayerHandler}>HEAL</button>\n                <button className=\"monsterkiller\" onClick={() => console.log(gameLog)}>SHOW LOG</button>\n            </div>\n        </div>\n    );\n};\n\nexport default KillMonster;","/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/ArtWork/UploadArtWork.js",[],"/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Home-About/About.js",[],"/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Profile/ShowProfile.js",[],"/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/NotFound/NotFound.js",[],"/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Home-About/Home.js",[],"/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/ArtWork/ShowArtWork.js",[],"/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Profile/EditProfile.js",["68","69"],"import React, {useState} from 'react';\nimport Axios from 'axios';\nimport './EditProfile.css';\n\nfunction EditProfile() {\n    // if the user has never filled his/her profile before, then start from empty\n    // const [values, setValues] = ({\n    //     name: '',\n    //     email: '',\n    //     phone: '',\n    //     age: '',\n    //     birthdate: '',\n    //     artstyle: '',\n    //     gender: '',\n    //     bio: ''\n    // });\n\n    // const [avatar, setAvatar] = useState('');\n\n    // // if the user has filled his/profile before, then get the data from the DB\n\n\n\n\n\n    // // this is the data to be sent\n    // const fd = new FormData();\n    // fd.append('avatar', avatar);\n    // fd.append('values', values);\n\n    // const url = 'http://localhost:3001/user/profile';\n    // const user = localStorage.getItem('username');\n\n    // const handleSubmit = async (e) => { };\n    // const handleChange = async (e) => { };\n\n    return (\n        <div className=\"form-content-right\">\n            <form className=\"form\">\n                <h1>Get started with us today! Complete your account!</h1>\n                <div className=\"form-inputs\">\n                    <label htmlFor=\"name\" className=\"form-label\">username</label>\n                    <input id=\"name\" type=\"text\" name=\"name\" className=\"form-input\" />\n                </div>\n                <div className=\"form-inputs\">\n                    <label htmlFor=\"email\" className=\"form-label\">email</label>\n                    <input id=\"email\" type=\"email\" name=\"email\" className=\"form-input\" />\n                </div>\n                <div className=\"form-inputs\">\n                    <label htmlFor=\"phone\" className=\"form-label\">phone</label>\n                    <input id=\"phone\" type=\"tel\" name=\"phone\" className=\"form-input\" />\n                </div>\n                <div className=\"form-inputs\">\n                    <label htmlFor=\"age\" className=\"form-label\">age</label>\n                    <input id=\"age\" type=\"number\"  name=\"age\" className=\"form-input\" min=\"1\" max=\"200\" step=\"1\" />\n                </div>\n                <div>\n                    <label htmlFor=\"date\">Birthdate</label>\n                    <input id=\"date\" type=\"date\" name=\"date\" min=\"1800-01-01\"/>\n                </div>\n                <div>\n                    Art Style\n                    <div>\n                        <label htmlFor=\"traditional\" className=\"form-label\">traditional</label>\n                        <input id=\"traditional\" type=\"checkbox\" name=\"traditional\" className=\"form-input\" />\n                    </div>\n                    <div>\n                        <label htmlFor=\"non-traditional\" className=\"form-label\">non-traditional</label>\n                        <input id=\"non-traditional\" type=\"checkbox\" name=\"non-traditional\" className=\"form-input\" />\n                    </div>\n                </div>\n                <div>\n                    Gender \n                    <div>\n                        <label htmlFor=\"male\">Male</label>\n                        <input type=\"radio\" id=\"male\" name=\"gender\" value=\"male\"/>\n                    </div>\n                    <div>\n                        <label htmlFor=\"female\">Female</label>\n                        <input type=\"radio\" id=\"female\" name=\"gender\" value=\"female\"/>\n                    </div>\n                </div>\n                <div>\n                    <label htmlFor=\"bio\">Bio</label>\n                    <textarea id=\"bio\" name=\"bio\" cols=\"30\" rows=\"10\"></textarea>\n                </div>\n                <div>\n                    <label htmlFor=\"file\">File</label>\n                    <input type=\"file\" id=\"file\" name=\"file\"/>\n                </div>\n                <button type=\"reset\">Reset</button>\n                <button type=\"submit\">Submit</button>\n            </form>\n        </div>\n    );\n};\n\nexport default EditProfile;","/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Games/MonsterKillerSupport.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":39,"column":8,"nodeType":"76","endLine":39,"endColumn":43,"suggestions":"77"},{"ruleId":"78","severity":1,"message":"79","line":1,"column":16,"nodeType":"80","messageId":"81","endLine":1,"endColumn":24},{"ruleId":"78","severity":1,"message":"82","line":2,"column":8,"nodeType":"80","messageId":"81","endLine":2,"endColumn":13},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'gameLog'. Either include it or remove the dependency array. You can also do a functional update 'setGameLog(g => ...)' if you only need 'gameLog' in the 'setGameLog' call.","ArrayExpression",["85"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},"Update the dependencies array to be: [gameLog, monsterHealthBar, playerHealthBar]",{"range":"88","text":"89"},[1245,1280],"[gameLog, monsterHealthBar, playerHealthBar]"]