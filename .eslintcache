[{"/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/index.js":"1","/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/App.js":"2","/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/components/Navbar.js":"3","/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Games/JanKenPon.js":"4","/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Games/MonsterKiller.js":"5","/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/ArtWork/UploadArtWork.js":"6","/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Home-About/About.js":"7","/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Profile/ShowProfile.js":"8","/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/NotFound/NotFound.js":"9","/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Home-About/Home.js":"10","/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/ArtWork/ShowArtWork.js":"11","/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Profile/EditProfile.js":"12","/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Games/MonsterKillerSupport.js":"13","/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Credentials/SignIn.js":"14","/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Credentials/SignUp.js":"15"},{"size":196,"mtime":1610718402943,"results":"16","hashOfConfig":"17"},{"size":1396,"mtime":1619432470647,"results":"18","hashOfConfig":"17"},{"size":5561,"mtime":1619432611051,"results":"19","hashOfConfig":"17"},{"size":5283,"mtime":1619429247901,"results":"20","hashOfConfig":"17"},{"size":7297,"mtime":1619432440348,"results":"21","hashOfConfig":"17"},{"size":3165,"mtime":1618769897586,"results":"22","hashOfConfig":"17"},{"size":922,"mtime":1618769897586,"results":"23","hashOfConfig":"17"},{"size":8014,"mtime":1619347979053,"results":"24","hashOfConfig":"17"},{"size":504,"mtime":1618769897590,"results":"25","hashOfConfig":"17"},{"size":152,"mtime":1618769897586,"results":"26","hashOfConfig":"17"},{"size":1923,"mtime":1619348552145,"results":"27","hashOfConfig":"17"},{"size":6540,"mtime":1619345435136,"results":"28","hashOfConfig":"17"},{"size":883,"mtime":1616137898654,"results":"29","hashOfConfig":"17"},{"size":2088,"mtime":1619433199166,"results":"30","hashOfConfig":"17"},{"size":2318,"mtime":1619433199166,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1o04so4",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/index.js",[],["64","65"],"/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/App.js",[],"/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/components/Navbar.js",[],"/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Games/JanKenPon.js",[],"/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Games/MonsterKiller.js",[],"/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/ArtWork/UploadArtWork.js",[],"/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Home-About/About.js",[],"/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Profile/ShowProfile.js",[],"/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/NotFound/NotFound.js",[],"/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Home-About/Home.js",[],"/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/ArtWork/ShowArtWork.js",[],"/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Profile/EditProfile.js",["66","67"],"import React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport './EditProfile.css';\n\nfunction ProfileEdit() {\n    //* states of data to be sent \n    const NULLVALUE = {\n        fullname: '',\n        age: '',\n        email: '',\n        phone: '',\n        location: '',\n        gender: 'male',\n        artstyle: 'traditional',\n        bio: ''\n    };\n    const [values, setValues] = useState(NULLVALUE);\n    const [avatar, setAvatar] = useState(null);\n\n    //* message for success or error of uploading\n    const [message, setMessage] = useState('');\n\n    //* check whether the user has ever filled the profile before\n    const url = 'http://localhost:3001/user/profile';\n    useEffect( () => {\n        const username = localStorage.getItem('username');\n        const getData = async () => {\n            try {\n                const response = await Axios.get(url, {\n                    headers: {\n                        username\n                }});\n                if (response.data.exist) {\n                    console.log('a profile exists, you can update it');\n\n                    const {fullname, email, phone, age, location, artstyle, gender, bio, avatar} = response.data.data[0];\n                    setValues({ fullname, age, email, phone, location, gender, artstyle, bio });\n                    setAvatar(avatar);\n                } else {\n                    console.log('a profile does not exist, make a new one please');\n                };\n            } catch (err) {\n                console.error(err);\n            };\n        };\n        getData();\n    }, []);\n    \n    const sendData = async () => {\n        const username = localStorage.getItem('username');\n        const fd = new FormData();\n        fd.append('avatar', avatar);\n        fd.append('fullname', values.fullname);\n        fd.append('age', values.age);\n        fd.append('email', values.email);\n        fd.append('phone', values.phone);\n        fd.append('location', values.location);\n        fd.append('gender', values.gender);\n        fd.append('artstyle', values.artstyle);\n        fd.append('bio', values.bio);\n\n        console.log(fd);\n        // const response = await Axios.post(url, fd, {\n        //     headers: {\n        //         username,\n        //         profileFilled\n        //     }\n        // }, {\n        //     onUploadProgress: ProgressEvent => {\n        //         console.log('Upload progress: ' + Math.round((ProgressEvent.loaded / ProgressEvent.total)*100) + '%');\n        //     }\n        // });\n\n        // //* showing result of upload\n        // if (response.data.editProfile) {\n        //     setMessage(response.data.message)\n        // } else {\n        //     setMessage('edit profile failed');\n        // };\n    };\n\n    //* functions for event changes\n    const handleChange = e => {\n        const { name, value } = e.target;\n        setValues({\n            ...values,\n            [name]: value\n        });\n    };\n    const fileSelectChange = e => { \n        console.log(e.target.files[0])\n        setAvatar(e.target.files[0]) };\n    const handleReset = e => {\n        e.preventDefault(); \n        setAvatar('');\n        setValues(NULLVALUE);\n    };\n    const handleSubmit = e => {\n        e.preventDefault();\n        sendData();\n    };\n\n    return (\n        <div id=\"top\">\n            <div className=\"profile-form\">\n                <h1>Profile Form</h1>\n            </div>\n            <div className=\"main\">\n                <form onSubmit={handleSubmit}>\n                    <h2 className=\"name\">Full Name</h2>\n                    <input className=\"form-input\" type=\"text\" name=\"fullname\" value={values.fullname} onChange={handleChange} />\n\n                    <h2 className=\"name\">Age</h2>\n                    <input className=\"form-input\" type=\"number\" name=\"age\" min=\"1\" max=\"200\" step=\"1\" value={values.age} onChange={handleChange} />\n\n                    <h2 className=\"name\">Email</h2>\n                    <input className=\"form-input\" type=\"email\" name=\"email\" value={values.email} onChange={handleChange} />\n\n                    <h2 className=\"name\">Phone</h2>\n                    <input className=\"form-input\" type=\"tel\" name=\"phone\" value={values.phone} onChange={handleChange} />\n\n                    <h2 className=\"name\">Location</h2>\n                    <input className=\"form-input\" type=\"text\" name=\"location\" value={values.location} onChange={handleChange} />\n\n                    <h2 className=\"name\">Gender</h2>\n                    <select className=\"gender\" name=\"gender\" value={values.gender} onChange={handleChange}>\n                        <option value=\"male\">Male</option>\n                        <option value=\"female\">Female</option>\n                        <option value=\"other\">Other</option>\n                    </select>\n\n                    <div id=\"art\">\n                        <h2 id=\"art-style\">Art Style</h2>\n                        <div className=\"cool\">\n                            <label className=\"radio\">\n                                <input className=\"radio-one\" type=\"radio\" name=\"artstyle\" value=\"traditional\" checked={values.artstyle === 'traditional'} onChange={handleChange} />\n                                <span className=\"checkmark\"></span>\n                                Traditional\n                            </label>\n                            <label className=\"radio\"> \n                                <input className=\"radio-two\" type=\"radio\" name=\"artstyle\" value=\"non-traditional\" checked={values.artstyle === 'non-traditional'} onChange={handleChange} />\n                                <span className=\"checkmark\"></span>\n                                Non Traditional\n                            </label>\n                        </div>\n                    </div>\n\n                    <h2 className=\"name\">Bio</h2>\n                    <textarea className=\"bio\" name=\"bio\" placeholder=\"Tell us a little about yourself\" value={values.bio} onChange={handleChange} ></textarea>\n\n                    <h2 className=\"name\">Profile Picture</h2>\n                    <input className=\"chooseAvatar\" type=\"file\" name=\"avatar\" onChange={fileSelectChange} />\n\n                    <div id=\"box\">\n                        <button className=\"button1\" type=\"reset\" onClick={handleReset}>Reset</button>\n                        <button className=\"button1\" type=\"submit\">Save</button>\n                    </div>\n                </form>\n            </div>\n            <h1 style={{color:\"red\"}}>{message}</h1>\n        </div>\n    );\n};\n\nexport default ProfileEdit;","/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Games/MonsterKillerSupport.js",[],"/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Credentials/SignIn.js",[],"/home/ikram/Programming/javascript/NodeJS/8.social-media--project/client/src/pages/Credentials/SignUp.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":21,"column":21,"nodeType":"74","messageId":"75","endLine":21,"endColumn":31},{"ruleId":"72","severity":1,"message":"76","line":50,"column":15,"nodeType":"74","messageId":"75","endLine":50,"endColumn":23},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'setMessage' is assigned a value but never used.","Identifier","unusedVar","'username' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]